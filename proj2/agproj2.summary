------[ Fri Nov 16 13:30:29 2018 ]------
PASS : tests write1.c
PASS : tests write10.c
PASS : tests exit1.c
FAIL : tests exec1.c
FAIL : tests join1.c
------[ Sat Nov 17 10:00:27 2018 ]------
PASS : tests write1.c
PASS : tests write10.c
PASS : tests exit1.c
PASS : tests exec1.c
FAIL : tests join1.c
------[ Sat Nov 17 15:00:39 2018 ]------
PASS : tests write1.c
PASS : tests write10.c
PASS : tests exit1.c
PASS : tests exec1.c
PASS : tests join1.c
------[ Tue Nov 20 21:31:14 2018 ]------
PASS : tests write1.c
PASS : tests write10.c
PASS : tests exit1.c
PASS : tests exec1.c
PASS : tests join1.c
------[ Tue Nov 20 23:02:18 2018 ]------
PASS : tests write1.c
PASS : tests write10.c
PASS : tests exit1.c
PASS : tests exec1.c
PASS : tests join1.c
------[ Tue Dec 11 11:00:26 2018 ]------
PASS : read-abc-1: Test reading short file w/ length less than file size
PASS : read-abc-2: Test reading short file w/ length equal to file size
PASS : read-abc-3: Test reading short file w/ length greater than file size
PASS : read-abc-4: Read in 10 characters, "abcdefghij", from stdin
PASS : read-abc-5: Test reading small amount repeatedly from a file
FAIL : read-err-badbuf-1: Test handling invalid buf. Read shall return -1
PASS : read-err-badlen: Test handling invalid length. Read shall return -1
PASS : read-err-fd-1: Test handling invalid file descriptor. Read shall return -1
PASS : read-err-fd-2: Test handling out of range file descriptor. Read shall return -1
PASS : read-err-fd-3: Test handling invalid buf, writing to readonly page. Read shall return -1
PASS : read-long: Test reading large amount from file
PASS : write-abc-1: Test writing small amount w/ length less than buf size
PASS : write-abc-2: Test writing small amount w/ length equal to buf size
PASS : write-abc-3: Test writing small amount to stdout
PASS : write-abc-4: Test writing small amount repeatedly to a file
PASS : write-err-badbuf-1: Test handling invalid buf. Read shall return -1
PASS : write-err-badlen: Test handling invalid length. Read shall return -1
PASS : write-err-fd-1: Test handling invalid file descriptor when calling write. Read shall return -1
PASS : write-err-fd-2: Test handling out of range file descriptor when calling write. Read shall return -1
PASS : write-err-fd-3: Test handling out of range file descriptor when calling write. Read shall return -1
PASS : write-long: Test writing large amount to file
PASS : write1: Write a string to stdout, one byte at a time
PASS : write10: Test the write system call under a variety of good and bad conditions
PASS : open1: Test open single file and get valid fd
PASS : open2: Test open a file that does not exist
PASS : open3: Check graceful failure of open when OpenFileLimit exceeded
PASS : open4: Check that duplicate fd is not given for two different files
PASS : open5: Check that duplicate fd is not given for same file
PASS : open6: Check stdin and stdout not messed with i.e. fd is not assigned to new file
PASS : open7: Check duplicate fd not given for many files
PASS : creat1: Test creat single file and get valid fd
PASS : creat2: Test creat a file that does not exist
PASS : creat3: Check graceful failure of open when OpenFileLimit exceeded
PASS : creat4: Check that duplicate fd is not given for two different files
PASS : creat5: Check that duplicate fd is not given for same file
PASS : creat6: Check stdin and stdout not messed with i.e. fd is not assigned to new file
PASS : creat7: Check duplicate fd not given for many files
PASS : unlink1: Test unlink single file and get status
PASS : unlink2: Test unlink on invalid file
PASS : unlink3: Test unlink single file and then try to open it, should fail
PASS : unlink4: open file, then unlink, read to make sure we can still read
PASS : close1: Test close bogus file descriptor returns
PASS : close2: Test close on valid fd assuming open works
PASS : close3: Test to close stdin
PASS : close4: Test to close stdout
FAIL : close5: Test to close stdin/stdout and open 15 files
PASS : exec1: Execute a simple program (one child)
PASS : exec2: Execute multiple programs (three children)
PASS : exec3: Execute an invalid program
PASS : exec4: Execute a bad program (out of memory)
PASS : exec6: Execute with arguments
PASS : exit1: Basic single process exit testcase
PASS : exit2: Test if process is freeing pages correctly on exit
PASS : exit3: Test if process is closing the open files on exit
FAIL : exit4: Test if exit status of child is returned to parent via join - single child
FAIL : exit5: Test if exit status of child is returned to parent via join - multiple children
PASS : join1: After exec-ing the child; it waits for the child to exit.
FAIL : join2: Join to child that has not exited yet
PASS : join3: Call join on child's child which counts as joining on a process that is not a child of the current process
PASS : join4: Joins on a child that exits due to an unhandled exception
PASS : join5: Exec 3 children and then join all 3
PASS : join6: Should not join on the same process twice
PASS : multiprog1: Read 1024 bytes of data from a random page
PASS : multiprog3: Check process creation and execute
PASS : multiprog5: Pocess creation with argv > 1 page should fail
PASS : multiprog6: check if process creation fails when memory is out of pages
PASS : multiprog7: Read at Invalid virtual address should fail
PASS : multiprog8: Write at Invalid virtual address should fail
PASS : multiprog9: Free list correctness is not affected
